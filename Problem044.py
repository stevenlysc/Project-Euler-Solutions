#! /usr/bin/python
# -*- coding: utf-8 -*-
'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''

import time

def isPentagonal(number):
	tmp = ((24 * number + 1) ** .5 + 1) / 6
	return tmp == int(tmp)

def solution():
	k = 1
	answer = 0
	while not answer:
		k = k + 1
		n = k * (3 * k - 1) / 2
		for j in xrange(k, 0, -1):
			m = j * (3 * j - 1) / 2
			if isPentagonal(n - m) and isPentagonal(n + m):
				answer = n - m
	print 'The answewr is {}' .format(answer)

def main():
	start = time.clock()
	solution()
	print 'Elapsed: {} ms' .format(1000 * (time.clock() - start))


if __name__ == '__main__':
	main()
